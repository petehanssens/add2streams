service: add2stream
provider:
  name: aws
  runtime: nodejs6.10
  # stage: dev
  region: ap-southeast-2

iamRoleStatements:
    - Effect: Allow
      Action:
        - kinesis:DescribeStream
        - kinesis:PutRecord
        - kinesis:PutRecords
        - kinesis:GetShardIterator
        - kinesis:GetRecords
      Resource:
        - arn:aws:kinesis:${self:custom.config.environment.region}:${self:custom.config.environment.account_id}:stream/*

functions:
  addARecord:
    handler: handler.addARecord
    role: KinesisStreamIAMRole
  add2Record:
    handler: handler.add2Record
    role: KinesisStreamIAMRole
    events:
      - stream:
          type: kinesis
          arn:
            Fn::GetAtt:
              - FirstStream
              - Arn
  OutputUpdatedRecord:
    handler: handler.OutputUpdatedRecord
    events:
      - stream:
          type: kinesis
          arn:
            Fn::GetAtt:
              - SecondStream
              - Arn

resources:
  Resources:
    FirstStream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: FirstStream
        RetentionPeriodHours: 24
        ShardCount: 1
    SecondStream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: SecondStream
        RetentionPeriodHours: 24
        ShardCount: 1

    KinesisStreamIAMRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Sid: 'KinesisStreamAssumeRole'
              Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: 'sts:AssumeRole'
        Policies:
          - PolicyName: kinesis-stream-role
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: 
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
                - Effect: "Allow"
                  Action:
                    - "kinesis:DescribeStream"
                    - "kinesis:GetShardIterator"
                    - "kinesis:GetRecords"
                    - "kinesis:PutRecord"
                    - "kinesis:PutRecords"
                  Resource:
                    'Fn::GetAtt':
                      - FirstStream
                      - Arn
                - Effect: "Allow"
                  Action:
                    - "kinesis:DescribeStream"
                    - "kinesis:GetShardIterator"
                    - "kinesis:GetRecords"
                    - "kinesis:PutRecord"
                    - "kinesis:PutRecords"
                  Resource:
                    'Fn::GetAtt':
                      - SecondStream
                      - Arn
  Outputs:
    FirstStreamARN:
      Description: Transactions Kinesis Stream ARN
      Value:
        'Fn::GetAtt':
          - FirstStream
          - Arn
    SecondStreamARN:
      Description: Positive Transactions Kinesis Stream ARN
      Value:
        'Fn::GetAtt':
          - SecondStream
          - Arn
    KinesisIAMRoleARN:
      Description: IAM Role ARN for Kinesis
      Value:
        'Fn::GetAtt':
          - KinesisStreamIAMRole
          - Arn
